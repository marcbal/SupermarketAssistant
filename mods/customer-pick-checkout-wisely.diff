  public class Checkout
  {
+     public int CustomerCount
+     {
+         get
+         {
+             return this.m_Customers.Count;
+         }
+     }
  }
=================================================
  public class CheckoutManager
  {
      public Checkout GetAvailableCheckout
      {
          get
          {
              this.m_TempCheckouts = (from i in this.m_Checkouts
              where !i.Full && i.CurrentState != Checkout.State.PLACING && i.CurrentState != Checkout.State.CLOSED
+             orderby i.CustomerCount
              select i).ToList<Checkout>();
              if (this.m_TempCheckouts.Count <= 0)
              {
                  return null;
              }
-             int index = Random.Range(0, this.m_TempCheckouts.Count);
-             return this.m_TempCheckouts[index];
+             return this.m_TempCheckouts[0];
          }
      }
  }
